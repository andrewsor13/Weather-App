{"mappings":"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","sources":["src/five-days.js"],"sourcesContent":["'use strict';\nimport {\n  formatDate,\n  getDayOfWeek,\n  createCardsMarkup,\n  getDailyData,\n  moreInfoData,\n  createMoreInfoMarkup,\n  iconMapping,\n  snowSvg,\n  sunSvg,\n  cloudsAndSunSvg,\n  cloudySvg,\n} from './utilsForFiveDays.js';\nlet selectedDay;\nconst moreInfoCards = document.querySelector('.more-info-container');\nconst cardsList = document.querySelector('.days-cards');\nconst sectionTitle = document.querySelector('.five-days-section__title');\nconst moreInfoContainer = document.querySelector('.more-info-container');\nconst fiveDaysSectionContainer = document.querySelector('.five-days-section');\n\nconst APIKEY = '072ec51636e5141423703ba32d12100f';\nconst urlForFiveDaysWeather = (lat, lon) => {\n  return `https://api.openweathermap.org/data/2.5/forecast/?lat=${lat}&lon=${lon}&appid=${APIKEY}&units=metric&lang=en`;\n};\n\n//de modificat city cu orasul din input\nlet city = 'Bucuresti';\nsectionTitle.textContent = city;\n//url pentru a afla coordonatele orasului din input(doar trebuie modificat pe linia 22)\nconst urlForCoordinates = () => {\n  return `https://api.openweathermap.org/geo/1.0/direct?q=${city}&appid=${APIKEY}`;\n};\n\nconst urlForCoordinatesForSearchedCity = city => {\n  return `https://api.openweathermap.org/geo/1.0/direct?q=${city}&appid=${APIKEY}`;\n};\n\n//aflare coordonate\nconst cityCoordinates = async () => {\n  const response = await fetch(urlForCoordinates());\n  const data = await response.json();\n  const coordinates = { lat: data[0].lat, lon: data[0].lon };\n  return coordinates;\n};\n\nconst searchedCityCoordinates = async () => {\n  const response = await fetch(\n    urlForCoordinatesForSearchedCity(searchInput.value)\n  );\n  const data = await response.json();\n  const coordinates = { lat: data[0].lat, lon: data[0].lon };\n  return coordinates;\n};\n//popularea cardurilor din sectiunea five-days\nconst getWeatherData = async () => {\n  const { lat, lon } = await cityCoordinates();\n  const response = await fetch(urlForFiveDaysWeather(lat, lon));\n  const weather = await response.json();\n  const dailyData = [];\n  weather.list.forEach(item => {\n    getDailyData(item, dailyData);\n  });\n  cardsList.innerHTML = '';\n  dailyData.forEach((item, index) => {\n    //aceasta conditie este pentru a elimina ziua curenta, deja este vizibila pe homepage\n    if (index === 0) {\n      return;\n    }\n    createCardsMarkup(item, cardsList, iconMapping);\n  });\n};\n\ngetWeatherData();\n\n//functie pentru popularea cardurilor more-info\nconst getMoreInfoData = async () => {\n  const { lat, lon } = await cityCoordinates();\n  const response = await fetch(urlForFiveDaysWeather(lat, lon));\n  const weather = await response.json();\n\n  const moreInfo = [];\n  weather.list.forEach(item => {\n    moreInfoData(item, moreInfo);\n  });\n  const dataForDay = moreInfo[selectedDay];\n  createMoreInfoMarkup(dataForDay, moreInfoContainer, iconMapping);\n};\n\nconst getMoreInfoDataForSearchedCity = async () => {\n  const { lat, lon } = await searchedCityCoordinates();\n  const response = await fetch(urlForFiveDaysWeather(lat, lon));\n  const weather = await response.json();\n\n  const moreInfo = [];\n  weather.list.forEach(item => {\n    moreInfoData(item, moreInfo);\n  });\n  const dataForDay = moreInfo[selectedDay];\n  createMoreInfoMarkup(dataForDay, moreInfoContainer, iconMapping);\n};\n\n//event listener pentru a afla pe care buton \"more-info\" s-a dat click pentru a arata informatii pentru ziua relevanta\ncardsList.addEventListener('click', event => {\n  if (event.target.classList.contains('card__button')) {\n    const clickedDay = event.target.value;\n    const cards = document.querySelectorAll(\".card\");\n    cards.forEach(element => {\n      element.classList.remove(\"selected\")\n    })\n    event.target.parentElement.classList.add('selected');\n    if (\n      moreInfoCards.classList.contains('hidden') ||\n      selectedDay !== clickedDay\n    ) {\n      selectedDay = clickedDay;\n      moreInfoCards.classList.remove('hidden');\n        \n      fiveDaysSectionContainer.style.marginBottom = '400px';\n      getMoreInfoData().catch(err => {\n        console.log(err);\n      });\n    } else {\n      event.target.parentElement.classList.remove('selected');\n      moreInfoCards.classList.add('hidden');\n      fiveDaysSectionContainer.style.marginBottom = '0px';\n    }\n  }\n});\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst searchForm = document.querySelector('#search-form');\nconst searchInput = document.querySelector('#search-input');\n\nconst getCityForecastData = async city => {\n  const { lat, lon } = await searchedCityCoordinates();\n  const response = await fetch(urlForFiveDaysWeather(lat, lon));\n  const weather = await response.json();\n  const dailyData = [];\n  weather.list.forEach(item => {\n    getDailyData(item, dailyData);\n  });\n  cardsList.innerHTML = '';\n  dailyData.forEach((item, index) => {\n    //aceasta conditie este pentru a elimina ziua curenta, deja este vizibila pe homepage\n    if (index === 0) {\n      return;\n    }\n    createCardsMarkup(item, cardsList, iconMapping);\n  });\n};\n\nsearchForm.addEventListener('submit', submitForm);\n\nfunction submitForm(event) {\n  event.preventDefault();\n\n  if (searchInput.value === '') {\n    Notify.info('Enter the city name, please!', {\n      position: 'center-center',\n    });\n    return;\n  }\n  // //    afisare oras ales + functie modificare background cu orasul ales - in caz ca nu exista poze sa se afiseze peisaje cu cerul??\n  //     // daca este accesat butonul today  - accesare functie pt today\n  //     // daca este accesat butonul fivedays - accesare functie five days\n  sectionTitle.textContent = searchInput.value;\n  city = searchInput.value;\n  getCityForecastData();\n}\n"],"names":["$6c600740bce8eb50$var$selectedDay","$bpxeT","parcelRequire","$6c600740bce8eb50$var$moreInfoCards","document","querySelector","$6c600740bce8eb50$var$cardsList","$6c600740bce8eb50$var$sectionTitle","$6c600740bce8eb50$var$moreInfoContainer","$6c600740bce8eb50$var$fiveDaysSectionContainer","$6c600740bce8eb50$var$APIKEY","$6c600740bce8eb50$var$urlForFiveDaysWeather","lat","lon","concat","$6c600740bce8eb50$var$city","textContent","$6c600740bce8eb50$var$cityCoordinates","$parcel$interopDefault","$2TvXO","mark","_callee","response","data","coordinates","fetch","_ctx","sent","json","$6c600740bce8eb50$var$searchedCityCoordinates","city1","$6c600740bce8eb50$var$searchInput","value","$6c600740bce8eb50$var$getWeatherData","ref","weather","dailyData","list","forEach","item","$hImfv","getDailyData","innerHTML","index","createCardsMarkup","iconMapping","$6c600740bce8eb50$var$getMoreInfoData","moreInfo","dataForDay","moreInfoData","createMoreInfoMarkup","addEventListener","event","target","classList","contains","clickedDay","querySelectorAll","element","remove","parentElement","add","style","marginBottom","catch","err","console","log","$6c600740bce8eb50$var$searchForm","$6c600740bce8eb50$var$getCityForecastData","city","preventDefault","$h6c0i","Notify","info","position"],"version":3,"file":"index.9fb864f1.js.map"}