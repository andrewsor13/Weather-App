{"mappings":"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","sources":["src/components/Chart/chart.js"],"sourcesContent":["async function getWeatherData() {\n  const API_KEY = '072ec51636e5141423703ba32d12100f';\n  const city = 'Bucharest';\n\n  //Utilizare temperatura\n\n  try {\n    const response = await axios.get(\n      `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`\n    );\n\n    const weatherData = response.data.list\n      .slice(0, 5)\n      .map(item => item.main.temp);\n\n    // selectia datelor calendaristice\n\n    const labels = response.data.list.slice(0, 5).map(item => {\n      const date = new Date(item.dt * 1000);\n      const day = date.getDate().toString().padStart(2, '0');\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\n      const year = date.getFullYear();\n      const hours = date.getHours();\n      const minutes = date.getMinutes();\n      return `${day}/${month}/${year} ${hours}:${\n        minutes < 10 ? '0' : ''\n      }${minutes}`;\n    });\n\n    return { weatherData, labels };\n  } catch (error) {\n    console.error('Eroare la obținerea datelor meteorologice:', error);\n    return null;\n  }\n}\n\n//Utilizare umiditate\n\nasync function getHumidityData() {\n  const API_KEY = '072ec51636e5141423703ba32d12100f';\n  const city = 'Bucharest';\n\n  try {\n    const response = await axios.get(\n      `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`\n    );\n\n    const humidityData = response.data.list\n      .slice(0, 5)\n      .map(item => item.main.humidity);\n    const labels = response.data.list.slice(0, 5).map(item => {\n      const date = new Date(item.dt * 1000);\n      const day = date.getDate().toString().padStart(2, '0');\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\n      const year = date.getFullYear();\n      const hours = date.getHours();\n      const minutes = date.getMinutes();\n      return `${day}/${month}/${year} ${hours}:${\n        minutes < 10 ? '0' : ''\n      }${minutes}`;\n    });\n\n    return { humidityData, labels };\n  } catch (error) {\n    console.error('Eroare la obținerea datelor de umiditate:', error);\n    return null;\n  }\n}\n\n//Utilizare viteza vantului\n\nasync function getWindData() {\n  const API_KEY = '072ec51636e5141423703ba32d12100f';\n  const city = 'Bucharest';\n\n  try {\n    const response = await axios.get(\n      `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`\n    );\n\n    const windData = response.data.list\n      .slice(0, 5)\n      .map(item => item.wind.speed);\n    const labels = response.data.list.slice(0, 5).map(item => {\n      const date = new Date(item.dt * 1000);\n      const day = date.getDate().toString().padStart(2, '0');\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\n      const year = date.getFullYear();\n      const hours = date.getHours();\n      const minutes = date.getMinutes();\n      return `${day}/${month}/${year} ${hours}:${\n        minutes < 10 ? '0' : ''\n      }${minutes}`;\n    });\n\n    return { windData, labels };\n  } catch (error) {\n    console.error('Eroare la obținerea datelor pentru viteza vantului:', error);\n    return null;\n  }\n}\n\n//Utilizare atmosferei\n\nasync function getAtmosphereData() {\n  const API_KEY = '072ec51636e5141423703ba32d12100f';\n  const city = 'Bucharest';\n\n  try {\n    const response = await axios.get(\n      `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`\n    );\n\n    const atmosphereData = response.data.list\n      .slice(0, 5)\n      .map(item => item.main.pressure);\n\n    const labels = response.data.list.slice(0, 5).map(item => {\n      const date = new Date(item.dt * 1000);\n      const day = date.getDate().toString().padStart(2, '0');\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\n      const year = date.getFullYear();\n      const hours = date.getHours();\n      const minutes = date.getMinutes();\n      return `${day}/${month}/${year} ${hours}:${\n        minutes < 10 ? '0' : ''\n      }${minutes}`;\n    });\n\n    return { atmosphereData, labels };\n  } catch (error) {\n    console.error(\n      'Eroare la obținerea datelor pentru presiunea atmosferica:',\n      error\n    );\n    return null;\n  }\n}\n\n// Functia de generare CHART\n\nasync function generateWeatherChart() {\n  const weatherData = await getWeatherData();\n  const humidityData = await getHumidityData();\n  const windData = await getWindData();\n  const atmosphereData = await getAtmosphereData();\n  if (weatherData) {\n    const ctx = document.getElementById('myChart').getContext('2d');\n    const chartFont = () => {\n      if (window.innerWidth < 480) {\n        return 12;\n      } else {\n        return 18;\n      }\n    };\n    new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: weatherData.labels,\n        datasets: [\n          {\n            label: 'Temperature',\n            data: weatherData.weatherData,\n            borderColor: 'rgb(255, 107, 9)',\n            borderWidth: 2,\n            fill: false,\n          },\n          {\n            label: 'Humidity',\n            data: humidityData.humidityData,\n            borderColor: 'rgb(9, 6, 235)',\n            borderWidth: 2,\n            fill: false,\n          },\n          {\n            label: 'Wind Speed',\n            data: windData.windData,\n            borderColor: 'rgb(234, 154, 5)',\n            borderWidth: 2,\n            fill: false,\n          },\n          {\n            label: 'Atmosphere pressure',\n            data: atmosphereData.atmosphereData,\n            borderColor: 'rgb(6, 120, 6)',\n            borderWidth: 2,\n            fill: false,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        scales: {\n          x: {\n            grid: {\n              color: 'rgb(100, 100, 100)',\n            },\n            ticks: {\n              color: 'rgb(100, 100, 100)',\n            },\n            title: {\n              display: true,\n              text: 'Date[dd/mm/yyyy - hour/minutes]',\n              color: 'rgb(100, 100, 100)',\n              font: {\n                size: chartFont(),\n              },\n            },\n          },\n          y: {\n            beginAtZero: true,\n            grid: {\n              color: 'rgb(100, 100, 100)',\n            },\n            ticks: {\n              color: 'rgb(100, 100, 100)',\n            },\n            title: {\n              display: true,\n              text: 'Value of Indicators',\n              color: 'rgb(100, 100, 100)',\n              font: {\n                size: chartFont(),\n              },\n            },\n          },\n        },\n      },\n    });\n    const chartContainer = document.querySelector('.chart-container');\n    chartContainer.classList.add('hidden');\n\n    localStorage.setItem('chartContainerActivated', 'false');\n  }\n}\n\nwindow.addEventListener('resize', () => {\n  myChart.options.scales.x.ticks.font.size = chartFont();\n  myChart.options.scales.y.ticks.font.size = chartFont();\n  myChart.update();\n});\n\ngenerateWeatherChart();\n\n//Evenimente pentru functionalitatile graficului\n\nconst chartCanvas = document.getElementById('myChart');\nconst toggleButton = document.getElementById('chartButton');\n\nwindow.addEventListener('load', function () {\n  const chartState = localStorage.getItem('chartContainerActivated');\n\n  if (chartState === 'true') {\n    chartCanvas.style.display = 'block';\n    toggleButton.innerText = 'Hide Chart';\n  } else {\n    chartCanvas.style.display = 'none';\n    toggleButton.innerText = 'Show Chart';\n  }\n});\n\ntoggleButton.addEventListener('click', function (event) {\n  event.preventDefault();\n  if (chartCanvas.style.display === 'none') {\n    chartCanvas.style.display = 'block';\n    toggleButton.innerText = 'Hide Chart';\n    localStorage.setItem('chartContainerActivated', 'true');\n  } else {\n    chartCanvas.style.display = 'none';\n    toggleButton.innerText = 'Show Chart';\n    localStorage.setItem('chartContainerActivated', 'false');\n  }\n});\n\nchartCanvas.style.display = 'none';\n\n// Aparitia si Disparitia graficului in functie de pagina din browser\n\nfunction activateChartContainer() {\n  var chartContainer = document.querySelector('.chart-container');\n\n  if (chartContainer) {\n    chartContainer.classList.remove('hidden');\n    localStorage.setItem('chartContainerActivated', 'true');\n\n    var toggleButton = document.getElementById('chartButton');\n    toggleButton.innerText = 'Show Chart';\n  }\n}\n\n// Aparitia si Disparitia graficului in functie de pagina\n\nvar activateButton = document.getElementById('5-days-button');\nactivateButton.addEventListener('click', activateChartContainer);\n\nfunction deactivateChartContainer() {\n  var chartContainer = document.querySelector('.chart-container');\n  if (chartContainer) {\n    chartContainer.classList.add('hidden');\n    localStorage.setItem('chartContainerDeactivated', 'true');\n  }\n}\n\nvar deactivateButton = document.getElementById('today-button');\ndeactivateButton.addEventListener('click', deactivateChartContainer);\n"],"names":["$bpxeT","parcelRequire","$891d6859b0fa7fe2$var$getWeatherData","$891d6859b0fa7fe2$var$_getWeatherData","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","weatherData","labels","axios","get","concat","_ctx","sent","data","list","slice","map","item","main","temp","date","Date","dt","day","getDate","toString","padStart","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","console","error","t0","$891d6859b0fa7fe2$var$getHumidityData","$891d6859b0fa7fe2$var$_getHumidityData","humidityData","humidity","$891d6859b0fa7fe2$var$getWindData","$891d6859b0fa7fe2$var$_getWindData","windData","wind","speed","$891d6859b0fa7fe2$var$getAtmosphereData","$891d6859b0fa7fe2$var$_getAtmosphereData","atmosphereData","pressure","$891d6859b0fa7fe2$var$_generateWeatherChart","ctx","chartFont","document","getElementById","getContext","window","innerWidth","Chart","type","datasets","label","borderColor","borderWidth","fill","options","responsive","scales","x","grid","color","ticks","title","display","text","font","size","y","beginAtZero","querySelector","classList","add","localStorage","setItem","addEventListener","myChart","update","$891d6859b0fa7fe2$var$generateWeatherChart","$891d6859b0fa7fe2$var$chartCanvas","$891d6859b0fa7fe2$var$toggleButton","getItem","style","innerText","event","preventDefault","chartContainer","remove"],"version":3,"file":"index.7b096fe2.js.map"}